#! /bin/bash
# a pirate bay torrent browsing script
# v 0.2 by chochem
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# PLEASE EDIT TO REFLECT YOUR SETUP
watchdir=$HOME/Downloads/Torrent


# FUNCTION DEFINITIONS BEGIN #

printhelp () {
echo "Pbtorrent is a script to browse/search the pirate bay from the command line. When torrents are picked the torrent file will be copied to a watch directoy, to be picked up by a torrent client, that automatically loads torrents in that directory (please edit the script to set the corrent 'watchdir' variable).

The syntax is fast-typed but somewhat inflexible (the order of apperance must be respected):

pbtorrent [search category key] ([sorting key]) ([search terms])

First, a (one and only one) search category is required. The options are:
   a	audio
   v	video
   s	software
   g	games
   x	anything else
   A	all of the above (requires search terms to work)

Second, a sorting key is optional (if none is entered, number of seeds is default). The options are:
   s	seeds
   z	size
   r	relevance (pirate bay default)

Finally you enter your search terms. If none are entered, you will be given the 'browse category' results.

Examples                        Meaning
pbtorrent a                     Browse category audio with default (seeds) sorting key
pbtorrent s r ubuntu            Search software category for 'ubuntu' with relevance sorting key
pbtorrent v z                   Browse video category with size sorting key
pbtorrent x surprise me         Search anything else category for term 'surprise me' with default sorting

Your search results will be presented in table format with a number, a name, size (caveat: you have to guess if it means kiB, MiB or GiB - sucks, i know, but it saves a lot of trouble, and it's not that hard to figure out), number of seeds and number of leeches. Just enter the number(s) of the torrent(s) you want (multiple numbers should be separated by a space) and hit enter, and the torrent will be downloaded and fed to transmission. In order to be able to keep browsing your results (say you're looking at the first page of the most popular video files, 'pbtorrent v', and want to see what's on the following page(s) too), the script will only exit when 'q' or 'x' is entered."  | fmt -s -w $twidth
exit
}

quitter () {
echo "No connection."
exit
}

# This is what should be done with the downloaded torrents
whattodowithtorrent () {
for l in $k; do 
	sudo wget -U "$userid" -qO ${watchdir}/pb${l}.torrent "${torrenturl[$l]}" && echo "${torrenturl[$l]} downloaded."
done
}

# FUNCTION DEFINITIONS END #

# initial settings
twidth=$(tput cols)
nwidth=$((${twidth}-29))
j=0
while [ $j -lt $twidth ]; do
	hrule="${hrule}-"
	let j++
done	

# get help
if [ -z "$*" -o "$*" = "-h" -o "$*" = "--help" ]; then 
	printhelp; 
fi

# first is category of search, second is sorting key (seeds, size, relevance), 
# third is search terms (if none are entered, browse category) 
case "$1" in
	a) searchcat="100";;
	v) searchcat="200";;
	s) searchcat="300";;
	g) searchcat="400";;
	x) searchcat="600";;
	A) searchcat="100,200,300,400,600";;
	*) echo "Not valid category. Printing help..."; printhelp;;
esac
shift
case "$1" in
	s) sortby="7"; shift;;
	z) sortby="5"; shift;;
	r) sortby="99"; shift;;
	*) sortby="7";;
esac
if [ -z "$*" ]; then
	mode="browse"; searchterms="$searchcat"; searchcat=""
else
	mode="search"; searchterms="$(echo "$*" | tr \  \+)"
fi

page=0
loop=1

# main script loop to allow repeat runs with new page number (will stop once user quits)
while [ $loop -eq 1 ]; do

searchurl="http://thepiratebay.org/${mode}/${searchterms}/${page}/${sortby}/${searchcat}"
userid='Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9) Gecko/2008060701 Firefox/3.0'

# download and cut search results
wget -U "$userid" -qO /tmp/pbindex.htm "$searchurl" || quitter
grep -A 3 "http://torrents.thepiratebay.org" /tmp/pbindex.htm > /tmp/pbindex

# 'parsing' for torrent addresses and names
c=0
addresses="$(grep -oE 'http://torrents.thepiratebay.org/[0-9]+/.+\.[0-9]+\.TPB\.torrent' /tmp/pbindex)"
if [ -z "$addresses" ]; then
	echo "Search produced no results. Please try again"
	exit
fi
for i in $addresses; do
	let c++
	torrenturl[$c]="$i"
	tempname="$(echo $i | sed -r -e s/'http\:\/\/torrents\.thepiratebay\.org\/[0-9]+\///g' -e 's/\.[0-9]+\.TPB\.torrent$//g' -e 's/_/\ /g')"
	tempname2="${tempname:0:${nwidth}}"
	while [ ${#tempname2} -lt ${nwidth} ]; do
		tempname2="$tempname2 "
	done
	torrentname[$c]="$tempname2"
done

# 'parsing' for size, seeds and leechers data
c=0
p=0
numbers="$(grep -v 'http://torrents.thepiratebay.org' /tmp/pbindex | grep -oE [0-9\.]+)"
for i in $numbers; do
	let p++
	case $p in
		1) let c++; size="$i"; while [ ${#size} -lt 7 ]; do size=" $size"; done; size[$c]=$size ;;
		2) seeds="$i"; while [ ${#seeds} -lt 5 ]; do seeds=" $seeds"; done; seeds[$c]=$seeds;;
		3) leechers="$i"; while [ ${#leechers} -lt 5 ]; do leechers=" $leechers"; done; leechers[$c]=$leechers; p=0;;
	esac
done

# produce rows of data
# prints a horizontal rule every five lines for better orientation
clear

j=0
echo -n "NO  TORRENT"
while [ $j -lt $(($twidth-29)) ]; do 
	echo -n " "
	let j++
done
echo "SIZE   SEED  LEECH"

j=0
while [ $j -lt $c ]; do
	let j++
	if [ $j -lt 10 ]; then j2=" $j"; else j2="$j"; fi
	echo -e "$j2) ${torrentname[$j]}    ${size[$j]}  ${seeds[$j]}  ${leechers[$j]}"
	if [ $(($j % 5)) -eq 0 -a $j -ne 30 ]; then
		echo "$hrule"
	fi
done

# user input and torrent download
echo; read -p "Enter the number(s) of the torrent(s) you wish to download (hit enter for next page, p for previous page, q for quit): " k

case "$k" in 
	q) loop=0; echo "Quitting...";;
	x) loop=0; echo "Quitting...";;
	p) let page--; echo "Getting previous page of results...";;
	'') let page++; echo "Getting next page of results...";;
	*) whattodowithtorrent;;
esac

# main script loop ends
done
