#!/bin/zsh
# (c) 2011, licensed under MIT/X11, by Colin 'Evaryont' Shea
# Based on the script by Robert Manea & Christian Dietrich

# a wicd-integrated network monitor

# icons
ICONPATH=$HOME/.data/icons/dzen
# update every x seconds
SLEEP=1
FG='#ccc'
BG='#222'
BBG='#333' # Bar Background
BFG=green  # Bar Foreground
X=1365
Y=0
WIDTH=200
FN='xft:Liberation Mono:size=7' # font

while :; do

  # network interface, so says wicd
  INTERFACE="$(dbus-send --system --print-reply --dest=org.wicd.daemon \
    /org/wicd/daemon org.wicd.daemon.GetCurrentInterface | tail -n1 | \
    sed 's@\s*string "\(.*\)"@\1@')"
  # wicd knows what the wireless card is, so let's ask it!
  WINTERFACE="$(dbus-send --system --print-reply --dest=org.wicd.daemon \
    /org/wicd/daemon org.wicd.daemon.GetWirelessInterface | tail -n1 | \
    sed 's@\s*string "\(.*\)"@\1@')"
  WIRELESS="no"
  if [ x"$INTERFACE" = x"$WINTERFACE" ]; then
    WIRELESS="yes"
  fi
  # Fall back on eth0 if we aren't connected.
  if [ x"$INTERFACE" = x ]; then
    INTERFACE="eth0"
  fi

  # Here we remember the previous rx/tx counts
  RXB=${RXB:-`cat /sys/class/net/${INTERFACE}/statistics/rx_bytes`}
  TXB=${TXB:-`cat /sys/class/net/${INTERFACE}/statistics/tx_bytes`}

  # get new rx/tx counts
  RXBN=`cat /sys/class/net/${INTERFACE}/statistics/rx_bytes`
  TXBN=`cat /sys/class/net/${INTERFACE}/statistics/tx_bytes`

  # calculate the rates
  # format the values to 4 digit fields
  RXR=$(echo "$RXBN - $RXB" | bc)
  if [ $RXR -gt 1024 ] ; then
    RXR=$(printf "%4d\n" $(echo "$RXR / 1024/${SLEEP}" | bc))
    RXRATE="kB/s"
  else
    RXR=$(printf "%4d\n" $(echo "$RXR / ${SLEEP}" | bc))
    RXRATE="B/s"
  fi

  TXR=$(echo "$TXBN - $TXB" | bc)
  if [ $TXR -gt 1024 ] ; then
    TXR=$(printf "%4d\n" $(echo "$TXR / 1024/${SLEEP}" | bc))
    TXRATE="kB/s"
  else
    TXR=$(printf "%4d\n" $(echo "$TXR / ${SLEEP}" | bc))
    TXRATE="B/s"
  fi

  OWN_IP=$(/sbin/ifconfig $INTERFACE |
           sed -ne '/inet addr/ s/.*addr:\([^ ]*\).*/\1/p')
  ROUTER=$(/sbin/route -n | awk '$1 ~ /0.0.0.0/ {print $2}')

  if [ x"$WIRELESS" = x"yes" ]; then
    SIGNAL=$(dbus-send --system --print-reply --dest=org.wicd.daemon \
    /org/wicd/daemon/wireless org.wicd.daemon.wireless.GetCurrentSignalStrength \
    | tail -n1 | sed 's@\s*int32 \(.*\)@\1@')
    SIGNALMETER=`echo $SIGNAL | gdbar -s v -h 15 -ss 1 -sh 2 -sw 12 -fg $BFG \
                -bg $BBG -nonl`
    DETAILS=$(/usr/sbin/iwconfig $INTERFACE | awk '
                   /^'$INTERFACE'/ {print gensub(":", ": ", 1, $4)}
      /Mode/ {print "Access Point: " $6}
      /Bit Rate/ {print "Bit Rate: " gensub(".*=(.*)", "\\1 MB/s", 1, $2)}')
  else
    # Can we re-purpose these for more helpful stuff for wired displays?
    SIGNAL=""
    SIGNALMETER=""
    DETAILS=""
  fi


  # print out the rates with some nice formatting
  echo -n "^tw()${INTERFACE}: \
^fg(#80AA83)${RXR}${RXRATE}^p(3)^i(${ICONPATH}/arr_down.xbm)\
^fg(orange)${TXR}${TXRATE}^i(${ICONPATH}/arr_up.xbm)^fg() $SIGNALMETER
^cs()
IP: $OWN_IP
Router: $ROUTER
$DETAILS"

  # reset old rates
  RXB=$RXBN; TXB=$TXBN

  sleep $SLEEP
done | dzen2 -bg $BG -fg $FG -ta c -l 5 -x $X -fn "$FN" -h 18 \
       -y $Y -w $WIDTH -e 'entertitle=uncollapse;leavetitle=collapse'
